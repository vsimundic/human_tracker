<launch>

  <arg name="classifierDir" default="Kinect"/>

  <!-- Launch the kinect -->
  <!-- <include file="$(find kinect_data)/launch/kinect_data.launch"/>  -->
	
  <!-- Launch consisteny node -->
  <node pkg="consistency" type="consistency_node" name="consistency" >
	<!-- mode = {accumulate,load} -->
	<param name="Q_Size" value="2" />
	<param name="UseDefaultRois" type="bool" value="true" />
	<param name="mode" type="string" value="load"/>
	<param name="label" 	 type="int"    value="1"  />
	<param name="yaml_filename" type="string" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/constraints.yml"/>
	<param name="max_training_samples" type="int" value="115"/>
	<remap from="input_rois" to="output_rois" />
	<remap from="Color_Image" to="/camera/rgb/image_color" />
	<remap from="Disparity_Image" to="/camera/depth/disparity" />
        <param name="Kinect_Disparity_Fix" value="true"/>	
   </node>

   <!-- Launch HaarAda Node-->
   <node name="HaarAdaNode" pkg="HaarAda" type="HaarAda174"  >	
	<param name="Q_Size" value="2" />
	<param name="RemoveOverlappingRois" type="bool" value="true" />
        <remap from="Color_Image" to="ConsistencyColorImage"/>	
        <remap from="Disparity_Image" to="ConsistencyDisparityImage"/>
        <remap from="input_rois" to="ConsistencyOutputRois"/>
        <!--mode={detect,train,load,accumulate} -->
        <param name="mode" value="load"/>
        <param name="classifier_file" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/HaarAda.xml"/>
        <param name="num_Training_Samples" value="1000"/>
        <param name="HaarAdaPrior" value="200.0"/>
   </node> 


   <!-- Launch HaarDispAda Node-->
   <node name="HaarDispAdaNode" pkg="HaarDispAda" type="HaarDispAda174" >	
	<param name="Q_Size" value="2" />
        <remap from="Color_Image" to="HaarAdaColorImage"/>	
        <remap from="Disparity_Image" to="HaarAdaDisparityImage"/>
        <remap from="input_rois" to="HaarAdaOutputRois"/>
        <!-- mode={detect,train,load,accumulate} -->
        <param name="mode" value="load"/>
        <param name="classifier_file" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/HaarDispAda.xml"/>
        <param name="num_Training_Samples" value="1000"/>
        <param name="HaarDispAdaPrior" value="3.0"/>
        <param name="Kinect_Disparity_Fix" value="false"/>	
        <param name="UseMissingDataMask" value="false"/>
   </node> 


   <!-- Launch HaarSvm Node-->
   <node name="HaarSvmNode" pkg="HaarSvm" type="HaarSvm8" >	  
	<param name="Q_Size" value="2" />
        <remap from="Color_Image" to="HaarDispAdaColorImage"/>	
        <remap from="Disparity_Image" to="HaarDispAdaDisparityImage"/>
        <remap from="input_rois" to="HaarDispAdaOutputRois"/>
        <!-- mode={detect,train,load,accumulate} -->
        <param name="mode" value="load"/>
        <param name="classifier_file" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/HaarSvm.xml"/>
        <param name="num_Training_Samples" value="1000"/>
        <param name="HaarSvmThreshold" value="-0.5"/>
   </node> 


   <!-- Launch HogSvm Node-->
   <node name="HogSvmNode" pkg="HogSvm" type="HogSvm1" >	
	<param name="Q_Size" value="2" />
        <remap from="Color_Image" to="HaarSvmColorImage"/>	
        <remap from="Disparity_Image" to="HaarSvmDisparityImage"/>
        <remap from="input_rois" to="HaarSvmOutputRois"/>
        <!-- mode={detect,train,load,accumulate} -->
        <param name="mode" value="load"/>
        <param name="Hog_Block_File"  value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/Blocks.xml"/>
        <param name="classifier_file" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/HogSvm.xml"/>
        <param name="Ave_Roi_File" value="$(env NIST_CLASSIFIERS)/$(arg classifierDir)/AveHOGRoi.jpg"/>
        <param name="num_Training_Samples" value="1000"/>
        <param name="HogSvmThreshold" value="0.0"/>
   </node> 

   <!-- display the rois -->
   <node pkg="roiViewer" type="roiViewer_node" name="HaarAdaViewer" >
        <param name="mode" type="string" value="roi_display"/> 
        <param name="label" type="int" value="1" />
	<remap from ="input_image" to="HogSvmColorImage"/>
	<remap from ="input_rois" to="HogSvmOutputRois"/>  
   </node>
   
     <!-- Launch Tracking Node-->
  <node name="TrackNode" pkg="object_tracking" type="object_tracking_node" >	
       <param name="Q_Size" value="2" />
       <remap from="Color_Image" to="HogSvmColorImage"/>	
       <remap from="Disparity_Image" to="HogSvmDisparityImage"/>
       <remap from="input_rois" to="HogSvmOutputRois"/>
       <remap from="l_camera_info" to="camera/depth_registered/camera_info"/>
       <remap from="r_camera_info" to="camera/projector/camera_info"/>
       <param name="Filter_Dir" value="$(find object_tracking)/perception_data" />
       <param name="Calculate_Covariance" value="false" />
       <param name="CSV_Filename" value="$(env NIST_RESULTS)/live.csv" />
  </node> 

</launch>
